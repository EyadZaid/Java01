
-- 1
-- Create a report that shows the CategoryName and Description from the categories
-- table sorted by CategoryName.
select CategoryName, Description
from Category
order by CategoryName;


--2
-- Create a report that shows the ContactName, CompanyName, ContactTitle and Phone
-- number from the customers table sorted by Phone.
select ContactName, CompanyName, ContactTitle, Phone
from Customer
order by Phone;


--3
-- Create a report that shows the capitalized FirstName and capitalized LastName renamed
-- as FirstName and Lastname respectively and HireDate from the employees table sorted
-- from the newest to the oldest employee.
SELECT upper(FirstName), upper(LastName), HireDate
from Employee
order by HireDate desc;


--4
-- Create a report that shows the top 10 OrderID, OrderDate, ShippedDate, CustomerID,
-- Freight from the orders table sorted by Freight in descending order.
select Id, OrderDate, ShippedDate, CustomerId, Freight
from "Order"
order by Freight desc;

--5
-- Create a report showing all the ContactName, Address, City of all customers not from
-- Germany, Mexico, Spain
select CompanyName, Address, City, Country
from Customer
where Country not IN('Germany', 'Mexico', 'Spain');


--6
--Create a report that shows the EmployeeID, OrderID, CustomerID, RequiredDate,
-- ShippedDate from all orders shipped later than the required date
select EmployeeID, Id, CustomerID, RequiredDate, ShippedDate
from "Order"
where ShippedDate > RequiredDate;


--7
--Create a report that shows the City, CompanyName, ContactName of customers from cities
-- starting with A or B.
select City, CompanyName, ContactName
from Customer
where City like 'A%' or Customer.City like 'B%';


--8
--Create a report that shows the CompanyName, ContactName number of all customer that
-- have no fax number.
select CompanyName, ContactName, Phone
from Customer
where Fax is null;


--9
--Create a report showing OrderID, total number of Order ID as NumberofOrders from the
-- orderdetails table grouped by OrderID and sorted by NumberofOrders in descending order.
-- HINT: you will need to use a Group by statement.
select OrderID, count(OrderId) as NumberofOrders
from OrderDetail
group by OrderID
order by NumberofOrders desc;


--10
-- Create a report that shows the SupplierID, ProductName, CompanyName from all product
-- Supplied by Exotic Liquids, Specialty Biscuits, Ltd., Escargots Nouveaux sorted by the
-- supplier ID
select s.Id, p.ProductName, s.CompanyName
from Supplier as s
inner join  Product p on p.SupplierId = s.Id
where CompanyName in ('Exotic Liquids', 'Specialty Biscuits, Ltd.', 'Escargots Nouveaux')
order by SupplierId;


--11
--Create a report that shows the CompanyName, ContactTitle, City, Country of all customers
-- in any city in Mexico or other cities in Spain other than Madrid.
select CompanyName, ContactTitle, City, Country
from Customer
where Country = 'Mexico' and City != 'Madrid' or
      Country = 'Spain' and City != 'Madrid';


--12
--Create a report that shows the average UnitPrice rounded to the next whole number,
-- total price of UnitsInStock and maximum number of orders from the products table.
-- All saved as AveragePrice, TotalStock and MaxOrder respectively.
select round(avg(UnitPrice), 2) as AveragePrice, sum(UnitsInStock) as TotalStock,
       max(Id) as MaxOrder
from Product;


--13
-- Create a report that shows the SupplierID, CompanyName, CategoryName, ProductName
-- and UnitPrice from the products, suppliers and categories table.
select SupplierID, CompanyName, CategoryName, ProductName, UnitPrice
from product
inner join Supplier s on s.Id = SupplierId
inner join Category c on c.Id = CategoryId;


--14
--Create a report that shows the CustomerID, sum of Freight, from the orders table with
-- sum of freight greater $200, grouped by CustomerID.
select CustomerID, sum(Freight) as sumFreight
from "Order"
group by CustomerID
having sumFreight > 200;


--15
--Create a report that shows the OrderID ContactName, UnitPrice, Quantity,
-- Discount from the order details, orders and customers table with discount given on
-- every purchase
select OrderID, ContactName, UnitPrice, Quantity, Discount
from OrderDetail
inner join "Order" ord on ord.Id = OrderId
inner join Customer c on c.Id = ord.CustomerId;


--16
--Create a report that shows the EmployeeID, the LastName and FirstName as employee,
-- and the LastName and FirstName of who they report to as manager from the employees
-- table sorted by Employee ID.
select e1.Id, e1.LastName, e1.FirstName, e2.LastName, e2.LastName
from Employee as e1, Employee as e2
where e1.Id = e2.ReportsTo
order by e1.Id;


--17
-- Same as above, but the report should also include a row for each manager that reports
-- to no one.
select e1.Id, e1.LastName, e1.FirstName, e2.LastName, e2.LastName
from Employee as e1, Employee as e2
where e1.ReportsTo = e2.Id
order by e1.Id;